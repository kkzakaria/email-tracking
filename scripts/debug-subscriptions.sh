#!/bin/bash

# Script pour d√©boguer les souscriptions webhook
WEBHOOK_URL="https://email-tracking-zeta.vercel.app"

echo "üîç DEBUG DES SOUSCRIPTIONS WEBHOOK"
echo "=================================="
echo

echo "1. TEST CR√âATION DE SOUSCRIPTION"
echo "--------------------------------"
echo "‚ö†Ô∏è Ce test n√©cessite une authentification"
echo "Testez manuellement via l'interface :"
echo "URL: $WEBHOOK_URL/dashboard/webhooks"
echo

echo "2. TEST R√âCUP√âRATION DES SOUSCRIPTIONS" 
echo "--------------------------------------"
echo "‚ö†Ô∏è Ce test n√©cessite une authentification"
echo "Testez manuellement :"
echo "URL: $WEBHOOK_URL/api/webhooks/subscribe"
echo

echo "3. DIAGNOSTIC DES PROBL√àMES POTENTIELS"
echo "======================================"
echo

echo "‚ùå PROBL√àME POTENTIEL 1: Erreur d'insertion en base"
echo "   ‚Üí V√©rifiez les logs Vercel lors de la cr√©ation"
echo "   ‚Üí Possible erreur RLS (Row Level Security) Supabase"
echo "   ‚Üí Service role key peut √™tre manquante"
echo

echo "‚ùå PROBL√àME POTENTIEL 2: user.id ne correspond pas"
echo "   ‚Üí L'interface utilise user.id du client auth"
echo "   ‚Üí Le WebhookService utilise options.userId"
echo "   ‚Üí Ces deux IDs doivent √™tre identiques"
echo

echo "‚ùå PROBL√àME POTENTIEL 3: Client Supabase incorrect"
echo "   ‚Üí WebhookService utilise service role key"
echo "   ‚Üí Interface utilise user auth context"
echo "   ‚Üí Possible conflit d'authentification"
echo

echo "‚ùå PROBL√àME POTENTIEL 4: Table webhook_subscriptions"
echo "   ‚Üí Migration 005 peut ne pas √™tre appliqu√©e"
echo "   ‚Üí Schema de table diff√©rent des colonnes utilis√©es"
echo "   ‚Üí Contraintes de cl√©s √©trang√®res"
echo

echo "4. SOLUTIONS √Ä TESTER"
echo "===================="
echo "‚úÖ 1. V√©rifier les logs Vercel pendant la cr√©ation"
echo "‚úÖ 2. V√©rifier que SUPABASE_SERVICE_ROLE_KEY est d√©finie"  
echo "‚úÖ 3. V√©rifier la migration 005 dans Supabase"
echo "‚úÖ 4. Ajouter plus de logs dans WebhookService"
echo "‚úÖ 5. Tester avec des logs explicites c√¥t√© base de donn√©es"
echo

echo "5. REQU√äTES SUPABASE √Ä EX√âCUTER MANUELLEMENT"
echo "============================================"
echo "-- V√©rifier l'existence de la table :"
echo "SELECT * FROM information_schema.tables WHERE table_name = 'webhook_subscriptions';"
echo
echo "-- V√©rifier le contenu (si la table existe) :"
echo "SELECT * FROM webhook_subscriptions ORDER BY created_at DESC LIMIT 10;"
echo
echo "-- V√©rifier les policies RLS :"
echo "SELECT * FROM pg_policies WHERE tablename = 'webhook_subscriptions';"
echo
echo "-- Tester insertion manuelle :"
echo "INSERT INTO webhook_subscriptions ("
echo "  subscription_id, user_id, resource, change_types,"
echo "  notification_url, expiration_datetime, client_state, status"
echo ") VALUES ("
echo "  'test-123', '[YOUR_USER_ID]', 'me/messages', '{created,updated}',"
echo "  '$WEBHOOK_URL/api/webhooks/outlook', NOW() + interval '3 days', 'test', 'active'"
echo ");"
echo

echo "üéØ PROCHAINES √âTAPES :"
echo "====================="
echo "1. Ajouter WEBHOOK_ENABLED=true sur Vercel"
echo "2. V√©rifier SUPABASE_SERVICE_ROLE_KEY sur Vercel" 
echo "3. V√©rifier les migrations Supabase sont appliqu√©es"
echo "4. Cr√©er une nouvelle souscription et v√©rifier les logs"
echo "5. V√©rifier manuellement la table webhook_subscriptions dans Supabase"